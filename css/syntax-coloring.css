pre {
    border: 1px solid #e6e6e6;
    border-radius: 3px;
    padding: 8pt;
    font-family: "Noto Sans Mono", monospace;
    overflow: auto;
    margin: 1.2em;
}

pre.src {
    position: relative;
    overflow: auto;
}

pre.src:before {
    display: none;
    position: absolute;
    top: -8px;
    right: 12px;
    padding: 3px;
    color: #9922aa;
}

@media (prefers-color-scheme: light) {
    .src pre {
        color: #000000;
        background-color: #ffffff;
    }
    .org-builtin {
        color: #8f0075;
    }
    .org-comment {
        color: #505050;
    }
    .org-comment-delimiter {
        color: #505050;
    }
    .org-constant {
        color: #0000bb;
    }
    .org-c-annotation {
        color: #0000bb;
    }
    .org-doc {
        color: #093060;
    }
    .org-error {
        color: #a60000;
        font-weight: bold;
    }
    .org-function-name {
        color: #721045;
    }
    .org-keyword {
        color: #5317ac;
    }
    .org-preprocessor {
        color: #a0132f;
    }
    .org-string {
        color: #223fbf;
    }
    .org-type {
        color: #8f0075;
    }
    .org-variable-name {
        color: #00538b;
    }
    .org-warning {
        color: #813e00;
        font-weight: bold;
    }
    .org-warning-1 {
        color: #703700;
    }

    .org-css-property {
        color: #5317ac;
    }
    .org-css-selector {
        color: #721045;
    }
    .org-sgml-namespace {
        color: #8f0075;
    }
    .org-sh-escaped-newline {
        color: #223fbf;
    }
    .org-sh-heredoc {
        color: #223fbf;
    }
    .org-sh-quoted-exec {
        color: #8f0075;
    }
}

@media (prefers-color-scheme: dark) {
    .src pre {
        color: #ffffff;
        background-color: #000000;
    }

    .org-builtin {
        color: #f78fe7;
    }
    .org-c-annotation {
        color: #00bcff;
    }
    .org-comment {
        color: #a8a8a8;
    }
    .org-comment-delimiter {
        color: #a8a8a8;
    }
    .org-constant {
        color: #00bcff;
    }
    .org-doc {
        color: #c6eaff;
    }
    .org-error {
        color: #ff8059;
        font-weight: bold;
    }
    .org-function-name {
        color: #feacd0;
    }
    .org-keyword {
        color: #b6a0ff;
    }
    .org-preprocessor {
        color: #ff9977;
    }
    .org-string {
        color: #79a8ff;
    }
    .org-type {
        color: #f78fe7;
    }
    .org-variable-name {
        color: #00d3d0;
    }
    .org-warning {
        color: #eecc00;
        font-weight: bold;
    }
    .org-warning-1 {
        color: #dbbe5f;
    }

    .org-css-property {
        color: #b6a0ff;
    }
    .org-css-selector {
        color: #feacd0;
    }
    .org-sgml-namespace {
        color: #f78fe7;
    }
    .org-sh-escaped-newline {
        color: #79a8ff;
    }
    .org-sh-heredoc {
        color: #79a8ff;
    }
    .org-sh-quoted-exec {
        color: #f78fe7;
    }
}

pre.src:hover:before {
    display: inline;
    margin-top: 14px;
}
/* Languages per Org manual */
pre.src-asymptote:before {
    content: "Asymptote";
}
pre.src-awk:before {
    content: "Awk";
}
pre.src-authinfo::before {
    content: "Authinfo";
}
pre.src-C:before {
    content: "C";
}
/* pre.src-C++ doesn't work in CSS */
pre.src-clojure:before {
    content: "Clojure";
}
pre.src-css:before {
    content: "CSS";
}
pre.src-D:before {
    content: "D";
}
pre.src-ditaa:before {
    content: "ditaa";
}
pre.src-dot:before {
    content: "Graphviz";
}
pre.src-calc:before {
    content: "Emacs Calc";
}
pre.src-emacs-lisp:before {
    content: "Emacs Lisp";
}
pre.src-fortran:before {
    content: "Fortran";
}
pre.src-gnuplot:before {
    content: "gnuplot";
}
pre.src-haskell:before {
    content: "Haskell";
}
pre.src-hledger:before {
    content: "hledger";
}
pre.src-java:before {
    content: "Java";
}
pre.src-js:before {
    content: "Javascript";
}
pre.src-latex:before {
    content: "LaTeX";
}
pre.src-ledger:before {
    content: "Ledger";
}
pre.src-lisp:before {
    content: "Lisp";
}
pre.src-lilypond:before {
    content: "Lilypond";
}
pre.src-lua:before {
    content: "Lua";
}
pre.src-matlab:before {
    content: "MATLAB";
}
pre.src-mscgen:before {
    content: "Mscgen";
}
pre.src-ocaml:before {
    content: "Objective Caml";
}
pre.src-octave:before {
    content: "Octave";
}
pre.src-org:before {
    content: "Org mode";
}
pre.src-oz:before {
    content: "OZ";
}
pre.src-plantuml:before {
    content: "Plantuml";
}
pre.src-processing:before {
    content: "Processing.js";
}
pre.src-python:before {
    content: "Python";
}
pre.src-R:before {
    content: "R";
}
pre.src-ruby:before {
    content: "Ruby";
}
pre.src-sass:before {
    content: "Sass";
}
pre.src-scheme:before {
    content: "Scheme";
}
pre.src-screen:before {
    content: "Gnu Screen";
}
pre.src-sed:before {
    content: "Sed";
}
pre.src-sh:before {
    content: "shell";
}
pre.src-sql:before {
    content: "SQL";
}
pre.src-sqlite:before {
    content: "SQLite";
}
/* additional languages in org.el's org-babel-load-languages alist */
pre.src-forth:before {
    content: "Forth";
}
pre.src-io:before {
    content: "IO";
}
pre.src-J:before {
    content: "J";
}
pre.src-makefile:before {
    content: "Makefile";
}
pre.src-maxima:before {
    content: "Maxima";
}
pre.src-perl:before {
    content: "Perl";
}
pre.src-picolisp:before {
    content: "Pico Lisp";
}
pre.src-scala:before {
    content: "Scala";
}
pre.src-shell:before {
    content: "Shell Script";
}
pre.src-ebnf2ps:before {
    content: "ebfn2ps";
}
/* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
pre.src-cpp:before {
    content: "C++";
}
pre.src-abc:before {
    content: "ABC";
}
pre.src-coq:before {
    content: "Coq";
}
pre.src-groovy:before {
    content: "Groovy";
}
/* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
pre.src-bash:before {
    content: "bash";
}
pre.src-csh:before {
    content: "csh";
}
pre.src-ash:before {
    content: "ash";
}
pre.src-dash:before {
    content: "dash";
}
pre.src-ksh:before {
    content: "ksh";
}
pre.src-mksh:before {
    content: "mksh";
}
pre.src-posh:before {
    content: "posh";
}
/* Additional Emacs modes also supported by the LaTeX listings package */
pre.src-ada:before {
    content: "Ada";
}
pre.src-asm:before {
    content: "Assembler";
}
pre.src-caml:before {
    content: "Caml";
}
pre.src-delphi:before {
    content: "Delphi";
}
pre.src-html:before {
    content: "HTML";
}
pre.src-idl:before {
    content: "IDL";
}
pre.src-mercury:before {
    content: "Mercury";
}
pre.src-metapost:before {
    content: "MetaPost";
}
pre.src-modula-2:before {
    content: "Modula-2";
}
pre.src-pascal:before {
    content: "Pascal";
}
pre.src-ps:before {
    content: "PostScript";
}
pre.src-prolog:before {
    content: "Prolog";
}
pre.src-simula:before {
    content: "Simula";
}
pre.src-tcl:before {
    content: "tcl";
}
pre.src-tex:before {
    content: "TeX";
}
pre.src-plain-tex:before {
    content: "Plain TeX";
}
pre.src-verilog:before {
    content: "Verilog";
}
pre.src-vhdl:before {
    content: "VHDL";
}
pre.src-xml:before {
    content: "XML";
}
pre.src-nxml:before {
    content: "XML";
}
/* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
pre.src-conf:before {
    content: "Configuration File";
}
